// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SelectTokenPopup /> should render and match the snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 7px;
  color: #9CA3AF;
  cursor: pointer;
}

.c8:hover {
  color: #0086ff;
}

.c6 {
  border: 1px solid #374151;
  background-color: #1F2937;
  border-radius: 8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c6:focus-within {
  border-color: #1D9384;
}

.c6 > svg {
  color: #FFFFFF;
}

.c6 > input {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  background: transparent;
  border: none;
  color: #FFFFFF;
  font-size: 1rem;
  font-family: Jost,system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  height: 36px;
  width: 100%;
  padding: 0;
  padding-right: calc( (40px - 1rem) / 2 );
}

.c6 > input:active,
.c6 > input:focus {
  outline: none;
}

.c6 > input::-webkit-input-placeholder {
  color: #9CA3AF;
}

.c6 > input::-moz-placeholder {
  color: #9CA3AF;
}

.c6 > input:-ms-input-placeholder {
  color: #9CA3AF;
}

.c6 > input::placeholder {
  color: #9CA3AF;
}

.c0 {
  border: 1px solid #374151;
  border-radius: 8px;
  background-color: #101726;
  color: #FFFFFF;
  box-sizing: border-box;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  box-sizing: border-box;
  border-radius: 8px;
}

.c1 {
  padding: 1.5rem;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 {
  font-weight: 500;
  font-size: 20px;
  line-height: 36px;
  color: #FFFFFF;
}

.c5 {
  color: #FFFFFF;
  cursor: pointer;
}

.c5:hover {
  color: #0086ff;
}

.c7 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

<body>
    <div>
      <div
        class="c0 c1"
      >
        <div
          class="c2"
        >
          <div
            class="c3"
          >
            <label
              class="c4"
            >
              common.selectTokenPopup.title
            </label>
            <svg
              class="c5"
            >
              close.svg
            </svg>
          </div>
          <div
            class="c6 c7"
          >
            <div
              class="c8"
            >
              <svg>
                search-loupe.svg
              </svg>
            </div>
            <input
              placeholder="common.selectTokenPopup.placeholder"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-dkPtRN dOtdNu sc-jRQBWg iRkHXH"
    >
      <div
        class="sc-hKwDye icbDsi"
      >
        <div
          class="sc-gKclnd fnhFAk"
        >
          <label
            class="sc-iCfMLu hGFEnU"
          >
            common.selectTokenPopup.title
          </label>
          <svg
            class="sc-furwcr fDtURF"
          >
            close.svg
          </svg>
        </div>
        <div
          class="sc-gsDKAQ icNEjB sc-pVTFL AoCLR"
        >
          <div
            class="sc-bdvvtL cwHno"
          >
            <svg>
              search-loupe.svg
            </svg>
          </div>
          <input
            placeholder="common.selectTokenPopup.placeholder"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
